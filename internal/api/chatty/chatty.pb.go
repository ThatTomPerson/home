// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/chatty/chatty.proto

/*
Package chatty is a generated protocol buffer package.

It is generated from these files:
	api/chatty/chatty.proto

It has these top-level messages:
	HelloRequest
	HelloResponse
*/
package chatty

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloResponse struct {
	Greeting string `protobuf:"bytes,2,opt,name=greeting" json:"greeting,omitempty"`
}

func (m *HelloResponse) Reset()                    { *m = HelloResponse{} }
func (m *HelloResponse) String() string            { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()               {}
func (*HelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "HelloResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Chatty service

type ChattyClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...client.CallOption) (*HelloResponse, error)
}

type chattyClient struct {
	c           client.Client
	serviceName string
}

func NewChattyClient(serviceName string, c client.Client) ChattyClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "chatty"
	}
	return &chattyClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *chattyClient) Hello(ctx context.Context, in *HelloRequest, opts ...client.CallOption) (*HelloResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Chatty.Hello", in)
	out := new(HelloResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Chatty service

type ChattyHandler interface {
	Hello(context.Context, *HelloRequest, *HelloResponse) error
}

func RegisterChattyHandler(s server.Server, hdlr ChattyHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Chatty{hdlr}, opts...))
}

type Chatty struct {
	ChattyHandler
}

func (h *Chatty) Hello(ctx context.Context, in *HelloRequest, out *HelloResponse) error {
	return h.ChattyHandler.Hello(ctx, in, out)
}

func init() { proto.RegisterFile("api/chatty/chatty.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x2c, 0xc8, 0xd4,
	0x4f, 0xce, 0x48, 0x2c, 0x29, 0xa9, 0x84, 0x52, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x4a, 0x4a,
	0x5c, 0x3c, 0x1e, 0xa9, 0x39, 0x39, 0xf9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42,
	0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x92,
	0x36, 0x17, 0x2f, 0x54, 0x4d, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x14, 0x17, 0x47, 0x7a,
	0x51, 0x6a, 0x6a, 0x49, 0x66, 0x5e, 0xba, 0x04, 0x13, 0x58, 0x21, 0x9c, 0x6f, 0x64, 0xc4, 0xc5,
	0xe6, 0x0c, 0xb6, 0x40, 0x48, 0x83, 0x8b, 0x15, 0xac, 0x4d, 0x88, 0x57, 0x0f, 0xd9, 0x0a, 0x29,
	0x3e, 0x3d, 0x14, 0xd3, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0x6e, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x03, 0x08, 0xdd, 0x4f, 0xa6, 0x00, 0x00, 0x00,
}
